from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from config import PARKS, TIME_SLOTS

def get_main_keyboard():
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = [
        [InlineKeyboardButton("üèÉ‚Äç‚ôÇÔ∏è –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", callback_data="training_info")],
        [InlineKeyboardButton("üìç –í—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∫", callback_data="select_park")],
        [InlineKeyboardButton("üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data="book_training")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û —Å–∫–µ–π—Ç—à–∫–æ–ª–µ", callback_data="about_school")],
        [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º", callback_data="contact_coach")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_park_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–∞—Ä–∫–∞"""
    keyboard = []
    for park_id, park_info in PARKS.items():
        keyboard.append([
            InlineKeyboardButton(
                f"{park_info['name']}", 
                callback_data=f"park_{park_id}"
            )
        ])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(keyboard)

def get_park_info_keyboard(park_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞—Ä–∫–µ"""
    keyboard = [
        [InlineKeyboardButton("üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö", url=PARKS[park_id]['yandex_maps'])],
        [InlineKeyboardButton("‚úÖ –í—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∫", callback_data=f"confirm_park_{park_id}")],
        [InlineKeyboardButton("üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–∞—Ä–∫", callback_data="select_park")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_date_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
    from datetime import datetime, timedelta
    
    keyboard = []
    today = datetime.now()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ 7 –¥–Ω–µ–π
    for i in range(1, 8):
        date = today + timedelta(days=i)
        day_name = date.strftime("%A")
        date_str = date.strftime("%d.%m")
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        day_translations = {
            'Monday': '–ü–Ω', 'Tuesday': '–í—Ç', 'Wednesday': '–°—Ä',
            'Thursday': '–ß—Ç', 'Friday': '–ü—Ç', 'Saturday': '–°–±', 'Sunday': '–í—Å'
        }
        
        day_ru = day_translations.get(day_name, day_name)
        keyboard.append([
            InlineKeyboardButton(
                f"{day_ru} {date_str}", 
                callback_data=f"date_{date.strftime('%Y-%m-%d')}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="select_park")])
    return InlineKeyboardMarkup(keyboard)

def get_time_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    keyboard = []
    row = []
    
    for i, time in enumerate(TIME_SLOTS):
        row.append(InlineKeyboardButton(time, callback_data=f"time_{time}"))
        if len(row) == 3:  # 3 –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä—è–¥
            keyboard.append(row)
            row = []
    
    if row:  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è
        keyboard.append(row)
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="select_date")])
    return InlineKeyboardMarkup(keyboard)

def get_equipment_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"""
    keyboard = [
        [InlineKeyboardButton("üõ°Ô∏è –î–∞, –Ω—É–∂–Ω–∞ –∑–∞—â–∏—Ç–∞", callback_data="equipment_protection")],
        [InlineKeyboardButton("üõπ –î–∞, –Ω—É–∂–µ–Ω —Å–∫–µ–π—Ç", callback_data="equipment_skateboard")],
        [InlineKeyboardButton("üõ°Ô∏èüõπ –ù—É–∂–Ω–æ –∏ —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ", callback_data="equipment_both")],
        [InlineKeyboardButton("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ", callback_data="equipment_none")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="select_time")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_confirmation_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="confirm_booking")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_booking")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="select_equipment")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_admin_confirmation_keyboard(user_id, booking_data):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"admin_confirm_{user_id}")],
        [InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"admin_reject_{user_id}")],
        [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data=f"admin_contact_{user_id}")]
    ]
    return InlineKeyboardMarkup(keyboard)
